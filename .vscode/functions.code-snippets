{
  // Place your workstation_install workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "tag_question[y|n]": {
    "scope": "shellscript",
    "prefix": "QUESTION",
    "body": [
      "tag_question \"confirm_question\" \"${1:Question string}\" \"${2:Command case true}\" \"${3|break_line,break_two_line|}\""
    ]
  },
  "Question[y|n]": {
    "scope": "shellscript",
    "prefix": "QUESTION",
    "body": [
      "confirm_question\" \"${1:Question string}\" \"${2:Command case true}\" \"${3|break_line,break_two_line|}\""
    ]
  },
  "Function and Question": {
    "scope": "shellscript",
    "prefix": "INSTALL",
    "body": [
      "$1() {",
      "tag_figlet \"$1\"",
      "break_line",
      "$2",
      "}",
      "tag_question \"confirm_question\" \"${3:Question string}\" \"$1\" \"${4|break_line,break_two_line|}\""
    ]
  },
  "Question Install Resource": {
    "scope": "shellscript",
    "prefix": ["INSTALL", "QUESTION"],
    "body": [
      "#!/bin/bash",
      "${1:${TM_FILENAME_BASE/[0-9]+-([a-zA-Z0-9]+)-([a-zA-Z0-9-]+)/${1:/downcase}_${2:/downcase}/}}() {",
      "  tag_figlet \"Install ${2:${TM_FILENAME_BASE/[0-9]+-install-([a-zA-Z0-9 -]+)/${1:/pascalcase}/}}\"",
      "  $0",
      "}",
      "",
      "question_tag_no_figlet",
      "confirm_question \"Deseja instalar $2?\" \\",
      "  -y \"break_two_line\" \"$1\" \\",
      "  -n \"break_two_line\""
    ]
  }
}
